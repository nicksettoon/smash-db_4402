<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="/home/nick/dev/smash-db_4402/smash.db" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><current_tab id="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="95"/><column_width id="3" width="3324"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="Matchup"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Character" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="FightSingles" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="Matchup" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort><column index="1" mode="0"/></sort><column_widths><column index="1" value="106"/></column_widths><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="Player" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="PlayerTournament" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table></browse_table_settings></tab_browse><tab_sql><sql name="char-cross-prod">SELECT c1.cname as c1name, c2.cname as c2name
FROM Character as c1, Character as c2;</sql><sql name="update-matchup"> UPDATE Matchup as mu
 SET c1wins =
 (SELECT COUNT (*) as c1wins
	FROM FightSingles as fights
	WHERE fights.char1 = fights.fwinner AND fights.char1 = mu.c1name AND fights.char2 = mu.c2name
	GROUP BY char1, char2, fwinner);
	
 UPDATE Matchup as mu
 SET c2wins =
 (SELECT COUNT (*) as c2wins
	FROM FightSingles as fights
	WHERE fights.char2 = fights.fwinner AND fights.char1 = mu.c1name AND fights.char2 = mu.c2name
	GROUP BY char1, char2, fwinner);

UPDATE Matchup as mu
 SET tratio =
	(SELECT ROUND(c1.tierid*1.0/c2.tierid,2) as tratio
		FROM Character c1, Character c2
		WHERE mu.c1name = c1.cname AND mu.c2name = c2.cname);

UPDATE Matchup
    SET c1wins = 0
    WHERE c1wins IS NULL;

UPDATE Matchup
    SET c2wins = 0
    WHERE c2wins IS NULL;</sql><sql name="fights-c1wins">SELECT char1, char2, fwinner, COUNT (*) as wins
FROM FightSingles
WHERE char1 = fwinner
GROUP BY char1, char2, fwinner;</sql><sql name="fights-c2wins">SELECT char1, char2, fwinner, COUNT (*) as wins
FROM FightSingles
WHERE char2 = fwinner
GROUP BY char1, char2, fwinner;</sql><sql name="matchup-occurances">SELECT *, c1wins + c2wins as occurances
FROM Matchup
WHERE occurances &gt;= 1;
</sql><sql name="sum-fights">SELECT SUM(occurances) as total_fights
FROM
(SELECT char1, char2, COUNT (*) as occurances
FROM FightSingles
GROUP BY char1, char2);</sql><sql name="round-elim">--Rank players by the depth they were eliminated at across all tournaments.
SELECT plyr1 as Player, MIN(depth) as Round_Eliminated
FROM SetSingles NATURAL JOIN Tournament
GROUP BY Player
UNION
Select plyr2 as Player, MIN(depth) as Round_Eliminated
FROM SetSingles NATURAL JOIN Tournament
GROUP BY Player
ORDER BY Round_Eliminated;</sql><sql name="all-set-wins">--Rank players by number of set wins for all tournaments
SELECT Plyr, IFNULL(Set_wins,0) as Set_wins
FROM (SELECT Plyr
		FROM (SELECT plyr1 as Plyr
				FROM SetSingles
				GROUP BY plyr1
			  UNION
			  SELECT plyr2 as Plyr
				FROM SetSingles
				GROUP BY plyr2
			  )
	  )
LEFT JOIN
	(SELECT swinner, COUNT(*) as Set_wins
		FROM SetSingles
		GROUP BY swinner) on Plyr = swinner
ORDER BY Set_wins DESC, Plyr ASC;</sql><sql name="tnmt-set-wins">--Rank players by number of set wins for a given tournament
SELECT Plyr, IFNULL(Set_wins,0) as Set_wins
FROM (SELECT Plyr
		FROM (SELECT plyr1 as Plyr
				FROM SetSingles NATURAL JOIN Tournament
				WHERE tname = &quot;Frostbite 2019&quot;
				GROUP BY plyr1
			  UNION
			  SELECT plyr2 as Plyr
				FROM SetSingles NATURAL JOIN Tournament
				WHERE tname = &quot;Frostbite 2019&quot;
				GROUP BY plyr2
			  )
	  )
LEFT JOIN
	(SELECT swinner, COUNT(*) as Set_wins
		FROM SetSingles NATURAL JOIN Tournament
		WHERE tname = &quot;Frostbite 2019&quot;
		GROUP BY swinner) on Plyr = swinner
ORDER BY Set_wins DESC, Plyr ASC;</sql><sql name="char-times-played">--Rank characters by total times played in Frostbite 2019.
SELECT Character, sum(Play_rate) as Total_played
FROM (SELECT char1 as Character, COUNT(*) as Play_rate
    FROM FightSingles NATURAL JOIN SetSingles NATURAL JOIN Tournament
	WHERE tname = &quot;Frostbite 2019&quot;
    GROUP BY char1
UNION
SELECT char2 as Character, COUNT(*) as Play_rate
    FROM FightSingles NATURAL JOIN SetSingles NATURAL JOIN Tournament
	WHERE tname = &quot;Frostbite 2019&quot;
    GROUP BY char2)
GROUP BY Character
ORDER BY Total_Played DESC;</sql><sql name="plyr-tnmt-attendance">--Rank players by tournament attendance.
SELECT pname as Player, COUNT(*) as Tourneys
    FROM PlayerTournament NATURAL JOIN Player
    GROUP BY pname
    ORDER BY Tourneys DESC;</sql><sql name="SQL 15">SELECT MAX(tratio)
FROM Matchup;</sql><current_tab id="1"/></tab_sql></sqlb_project>
